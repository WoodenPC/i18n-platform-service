datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model UsersGroup {
    id BigInt @id @default(autoincrement())
    createdAt DateTime @default(now())
    groupName String
    groupProjects Project[]
    groupUsers User[]
}

model Project {
  id BigInt @id @default(autoincrement())
  createdAt DateTime @default(now())
  group UsersGroup @relation(fields: [groupId], references: [id])
  groupId BigInt
}

model User {
  id BigInt @id @default(autoincrement())
  createdAt DateTime @default(now())
  userEmail String @unique
  userPassword String

  groups UsersGroup[]
  authToken AuthToken?
}

model AuthToken {
  id BigInt @id @default(autoincrement())
  refreshToken String
  user User @relation(fields: [userId], references: [id])
  userId BigInt @unique
}

model Language {
  id BigInt @id @default(autoincrement())
  createdAt DateTime @default(now())
  languageName String
  translation LanguageTranslation?
}

model Translation {
  id BigInt @id @default(autoincrement())
  createdAt DateTime @default(now())
  keyName String
  languageTranslations LanguageTranslation[]
}


model LanguageTranslation {
  id BigInt @id @default(autoincrement())
  createdAt DateTime @default(now())
  translationValue String
  translation Translation @relation(fields: [translationId], references: [id])
  translationId BigInt
  language Language @relation(fields: [languageId], references: [id])
  languageId BigInt @unique
}

enum Role {
  USER
  ADMIN
}